digraph osiris_cfg {
rankdir = TB;
size = "240"
graph[fontname = Courier, fontsize = 14.0, labeljust = l, nojustify = true];node[shape = record];
"0x0"[label="0x00000000 PUSH1 0x60 \l0x00000002 PUSH1 0x40 \l0x00000004 MSTORE \l0x00000005 PUSH1 0x04 \l0x00000007 CALLDATASIZE \l0x00000008 LT \l0x00000009 PUSH2 0x0062 \l0x0000000c JUMPI \l"];
"0x0" -> "0x62" [color="green" label=" If(ULE(4, Id_size), 0, 1) != 0"];
"0x0" -> "0xd" [color="red" label=" Not(If(ULE(4, Id_size), 0, 1) != 0)"];
"0xd"[label="0x0000000d PUSH1 0x00 \l0x0000000f CALLDATALOAD \l0x00000010 PUSH29 0x0100000000000000000000000000000000000000000000000000000000 \l0x0000002e SWAP1 \l0x0000002f DIV \l0x00000030 PUSH4 0xffffffff \l0x00000035 AND \l0x00000036 DUP1 \l0x00000037 PUSH4 0x4162169f \l0x0000003c EQ \l0x0000003d PUSH2 0x013d \l0x00000040 JUMPI \l"];
"0xd" -> "0x13d" [color="green" label=" If(Extract(255, 224, Id_1) == 1096947359, 1, 0) != 0"];
"0xd" -> "0x41" [color="red" label=" Not(If(Extract(255, 224, Id_1) == 1096947359, 1, 0) != 0)"];
"0x41"[label="0x00000041 DUP1 \l0x00000042 PUSH4 0x9329066c \l0x00000047 EQ \l0x00000048 PUSH2 0x0192 \l0x0000004b JUMPI \l"];
"0x41" -> "0x192" [color="green" label=" If(Extract(255, 224, Id_1) == 2468939372, 1, 0) != 0"];
"0x41" -> "0x4c" [color="red" label=" Not(If(Extract(255, 224, Id_1) == 2468939372, 1, 0) != 0)"];
"0x4c"[label="0x0000004c DUP1 \l0x0000004d PUSH4 0x9e5faafc \l0x00000052 EQ \l0x00000053 PUSH2 0x01bf \l0x00000056 JUMPI \l"];
"0x4c" -> "0x1bf" [color="green" label=" If(Extract(255, 224, Id_1) == 2657069820, 1, 0) != 0"];
"0x4c" -> "0x57" [color="red" label=" Not(If(Extract(255, 224, Id_1) == 2657069820, 1, 0) != 0)"];
"0x57"[label="0x00000057 DUP1 \l0x00000058 PUSH4 0xbaf755cb \l0x0000005d EQ \l0x0000005e PUSH2 0x01c9 \l0x00000061 JUMPI \l"];
"0x57" -> "0x1c9" [color="green" label=" If(Extract(255, 224, Id_1) == 3136771531, 1, 0) != 0"];
"0x57" -> "0x62" [color="red" label=" Not(If(Extract(255, 224, Id_1) == 3136771531, 1, 0) != 0)"];
"0x62"[label="0x00000062 JUMPDEST \l0x00000063 PUSH1 0x01 \l0x00000065 PUSH1 0x14 \l0x00000067 SWAP1 \l0x00000068 SLOAD \l0x00000069 SWAP1 \l0x0000006a PUSH2 0x0100 \l0x0000006d EXP \l0x0000006e SWAP1 \l0x0000006f DIV \l0x00000070 PUSH1 0xff \l0x00000072 AND \l0x00000073 ISZERO \l0x00000074 PUSH2 0x013b \l0x00000077 JUMPI \l"];
"0x62" -> "0x13b" [color="green" label=" If(Extract(167, 160, Ia_store_1) == 0, 1, 0) != 0"];
"0x62" -> "0x78" [color="red" label=" Not(If(Extract(167, 160, Ia_store_1) == 0, 1, 0) != 0)"];
"0x78"[label="0x00000078 PUSH1 0x00 \l0x0000007a PUSH1 0x01 \l0x0000007c PUSH1 0x14 \l0x0000007e PUSH2 0x0100 \l0x00000081 EXP \l0x00000082 DUP2 \l0x00000083 SLOAD \l0x00000084 DUP2 \l0x00000085 PUSH1 0xff \l0x00000087 MUL \l0x00000088 NOT \l0x00000089 AND \l0x0000008a SWAP1 \l0x0000008b DUP4 \l0x0000008c ISZERO \l0x0000008d ISZERO \l0x0000008e MUL \l0x0000008f OR \l0x00000090 SWAP1 \l0x00000091 SSTORE \l0x00000092 POP \l0x00000093 PUSH1 0x00 \l0x00000095 DUP1 \l0x00000096 SWAP1 \l0x00000097 SLOAD \l0x00000098 SWAP1 \l0x00000099 PUSH2 0x0100 \l0x0000009c EXP \l0x0000009d SWAP1 \l0x0000009e DIV \l0x0000009f PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000000b4 AND \l0x000000b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000000ca AND \l0x000000cb PUSH4 0x2e1a7d4d \l0x000000d0 PUSH1 0x01 \l0x000000d2 PUSH1 0x40 \l0x000000d4 MLOAD \l0x000000d5 DUP3 \l0x000000d6 PUSH4 0xffffffff \l0x000000db AND \l0x000000dc PUSH29 0x0100000000000000000000000000000000000000000000000000000000 \l0x000000fa MUL \l0x000000fb DUP2 \l0x000000fc MSTORE \l0x000000fd PUSH1 0x04 \l0x000000ff ADD \l0x00000100 DUP1 \l0x00000101 DUP3 \l0x00000102 DUP2 \l0x00000103 MSTORE \l0x00000104 PUSH1 0x20 \l0x00000106 ADD \l0x00000107 SWAP2 \l0x00000108 POP \l0x00000109 POP \l0x0000010a PUSH1 0x20 \l0x0000010c PUSH1 0x40 \l0x0000010e MLOAD \l0x0000010f DUP1 \l0x00000110 DUP4 \l0x00000111 SUB \l0x00000112 DUP2 \l0x00000113 PUSH1 0x00 \l0x00000115 DUP8 \l0x00000116 DUP1 \l0x00000117 EXTCODESIZE \l0x00000118 ISZERO \l0x00000119 ISZERO \l0x0000011a PUSH2 0x0122 \l0x0000011d JUMPI \l"];
"0x78" -> "0x122" [color="green" label=" If(If(code_size_Concat(0, Extract(159, 0, Ia_store_0)) == 0,
      1,
      0) ==
   0,
   1,
   0) !=
0"];
"0x78" -> "0x11e" [color="red" label=" Not(If(If(code_size_Concat(0, Extract(159, 0, Ia_store_0)) ==
          0,
          1,
          0) ==
       0,
       1,
       0) !=
    0)"];
"0x11e"[label="0x0000011e PUSH1 0x00 \l0x00000120 DUP1 \l0x00000121 REVERT \l"];
"0x122"[label="0x00000122 JUMPDEST \l0x00000123 GAS \l0x00000124 CALL \l0x00000125 ISZERO \l0x00000126 ISZERO \l0x00000127 PUSH2 0x012f \l0x0000012a JUMPI \l"];
"0x122" -> "0x12f" [color="green" label=" True"];
"0x122" -> "0x12b" [color="red" label=" Not(True)"];
"0x12b"[label="0x0000012b PUSH1 0x00 \l0x0000012d DUP1 \l0x0000012e REVERT \l"];
"0x12f"[label="0x0000012f JUMPDEST \l0x00000130 POP \l0x00000131 POP \l0x00000132 POP \l0x00000133 PUSH1 0x40 \l0x00000135 MLOAD \l0x00000136 DUP1 \l0x00000137 MLOAD \l0x00000138 SWAP1 \l0x00000139 POP \l0x0000013a POP \l"];
"0x12f" -> "0x13b" [color="black"];
"0x13b"[label="0x0000013b JUMPDEST \l0x0000013c STOP \l"];
"0x13d"[label="0x0000013d JUMPDEST \l0x0000013e CALLVALUE \l0x0000013f ISZERO \l0x00000140 PUSH2 0x0148 \l0x00000143 JUMPI \l"];
"0x13d" -> "0x148" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x13d" -> "0x144" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x144"[label="0x00000144 PUSH1 0x00 \l0x00000146 DUP1 \l0x00000147 REVERT \l"];
"0x148"[label="0x00000148 JUMPDEST \l0x00000149 PUSH2 0x0150 \l0x0000014c PUSH2 0x01f6 \l0x0000014f JUMP \l"];
"0x148" -> "0x1f6" [color="black"];
"0x150"[label="0x00000150 JUMPDEST \l0x00000151 PUSH1 0x40 \l0x00000153 MLOAD \l0x00000154 DUP1 \l0x00000155 DUP3 \l0x00000156 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000016b AND \l0x0000016c PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000181 AND \l0x00000182 DUP2 \l0x00000183 MSTORE \l0x00000184 PUSH1 0x20 \l0x00000186 ADD \l0x00000187 SWAP2 \l0x00000188 POP \l0x00000189 POP \l0x0000018a PUSH1 0x40 \l0x0000018c MLOAD \l0x0000018d DUP1 \l0x0000018e SWAP2 \l0x0000018f SUB \l0x00000190 SWAP1 \l0x00000191 RETURN \l"];
"0x192"[label="0x00000192 JUMPDEST \l0x00000193 CALLVALUE \l0x00000194 ISZERO \l0x00000195 PUSH2 0x019d \l0x00000198 JUMPI \l"];
"0x192" -> "0x19d" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x192" -> "0x199" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x199"[label="0x00000199 PUSH1 0x00 \l0x0000019b DUP1 \l0x0000019c REVERT \l"];
"0x19d"[label="0x0000019d JUMPDEST \l0x0000019e PUSH2 0x01a5 \l0x000001a1 PUSH2 0x021b \l0x000001a4 JUMP \l"];
"0x19d" -> "0x21b" [color="black"];
"0x1a5"[label="0x000001a5 JUMPDEST \l0x000001a6 PUSH1 0x40 \l0x000001a8 MLOAD \l0x000001a9 DUP1 \l0x000001aa DUP3 \l0x000001ab ISZERO \l0x000001ac ISZERO \l0x000001ad ISZERO \l0x000001ae ISZERO \l0x000001af DUP2 \l0x000001b0 MSTORE \l0x000001b1 PUSH1 0x20 \l0x000001b3 ADD \l0x000001b4 SWAP2 \l0x000001b5 POP \l0x000001b6 POP \l0x000001b7 PUSH1 0x40 \l0x000001b9 MLOAD \l0x000001ba DUP1 \l0x000001bb SWAP2 \l0x000001bc SUB \l0x000001bd SWAP1 \l0x000001be RETURN \l"];
"0x1bf"[label="0x000001bf JUMPDEST \l0x000001c0 PUSH2 0x01c7 \l0x000001c3 PUSH2 0x038e \l0x000001c6 JUMP \l"];
"0x1bf" -> "0x38e" [color="black"];
"0x1c7"[label="0x000001c7 JUMPDEST \l0x000001c8 STOP \l"];
"0x1c9"[label="0x000001c9 JUMPDEST \l0x000001ca CALLVALUE \l0x000001cb ISZERO \l0x000001cc PUSH2 0x01d4 \l0x000001cf JUMPI \l"];
"0x1c9" -> "0x1d4" [color="green" label=" If(Iv == 0, 1, 0) != 0"];
"0x1c9" -> "0x1d0" [color="red" label=" Not(If(Iv == 0, 1, 0) != 0)"];
"0x1d0"[label="0x000001d0 PUSH1 0x00 \l0x000001d2 DUP1 \l0x000001d3 REVERT \l"];
"0x1d4"[label="0x000001d4 JUMPDEST \l0x000001d5 PUSH2 0x01dc \l0x000001d8 PUSH2 0x0504 \l0x000001db JUMP \l"];
"0x1d4" -> "0x504" [color="black"];
"0x1dc"[label="0x000001dc JUMPDEST \l0x000001dd PUSH1 0x40 \l0x000001df MLOAD \l0x000001e0 DUP1 \l0x000001e1 DUP3 \l0x000001e2 ISZERO \l0x000001e3 ISZERO \l0x000001e4 ISZERO \l0x000001e5 ISZERO \l0x000001e6 DUP2 \l0x000001e7 MSTORE \l0x000001e8 PUSH1 0x20 \l0x000001ea ADD \l0x000001eb SWAP2 \l0x000001ec POP \l0x000001ed POP \l0x000001ee PUSH1 0x40 \l0x000001f0 MLOAD \l0x000001f1 DUP1 \l0x000001f2 SWAP2 \l0x000001f3 SUB \l0x000001f4 SWAP1 \l0x000001f5 RETURN \l"];
"0x1f6"[label="0x000001f6 JUMPDEST \l0x000001f7 PUSH1 0x00 \l0x000001f9 DUP1 \l0x000001fa SWAP1 \l0x000001fb SLOAD \l0x000001fc SWAP1 \l0x000001fd PUSH2 0x0100 \l0x00000200 EXP \l0x00000201 SWAP1 \l0x00000202 DIV \l0x00000203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000218 AND \l0x00000219 DUP2 \l0x0000021a JUMP \l"];
"0x1f6" -> "0x150" [color="black"];
"0x21b"[label="0x0000021b JUMPDEST \l0x0000021c PUSH1 0x00 \l0x0000021e DUP1 \l0x0000021f PUSH1 0x00 \l0x00000221 DUP1 \l0x00000222 SWAP1 \l0x00000223 SLOAD \l0x00000224 SWAP1 \l0x00000225 PUSH2 0x0100 \l0x00000228 EXP \l0x00000229 SWAP1 \l0x0000022a DIV \l0x0000022b PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000240 AND \l0x00000241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000256 AND \l0x00000257 PUSH4 0x2e1a7d4d \l0x0000025c PUSH1 0x00 \l0x0000025e DUP1 \l0x0000025f SWAP1 \l0x00000260 SLOAD \l0x00000261 SWAP1 \l0x00000262 PUSH2 0x0100 \l0x00000265 EXP \l0x00000266 SWAP1 \l0x00000267 DIV \l0x00000268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000027d AND \l0x0000027e PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000293 AND \l0x00000294 BALANCE \l0x00000295 PUSH1 0x40 \l0x00000297 MLOAD \l0x00000298 DUP3 \l0x00000299 PUSH4 0xffffffff \l0x0000029e AND \l0x0000029f PUSH29 0x0100000000000000000000000000000000000000000000000000000000 \l0x000002bd MUL \l0x000002be DUP2 \l0x000002bf MSTORE \l0x000002c0 PUSH1 0x04 \l0x000002c2 ADD \l0x000002c3 DUP1 \l0x000002c4 DUP3 \l0x000002c5 DUP2 \l0x000002c6 MSTORE \l0x000002c7 PUSH1 0x20 \l0x000002c9 ADD \l0x000002ca SWAP2 \l0x000002cb POP \l0x000002cc POP \l0x000002cd PUSH1 0x20 \l0x000002cf PUSH1 0x40 \l0x000002d1 MLOAD \l0x000002d2 DUP1 \l0x000002d3 DUP4 \l0x000002d4 SUB \l0x000002d5 DUP2 \l0x000002d6 PUSH1 0x00 \l0x000002d8 DUP8 \l0x000002d9 DUP1 \l0x000002da EXTCODESIZE \l0x000002db ISZERO \l0x000002dc ISZERO \l0x000002dd PUSH2 0x02e5 \l0x000002e0 JUMPI \l"];
"0x21b" -> "0x2e5" [color="green" label=" If(If(code_size_Concat(0, Extract(159, 0, Ia_store_0)) == 0,
      1,
      0) ==
   0,
   1,
   0) !=
0"];
"0x21b" -> "0x2e1" [color="red" label=" Not(If(If(code_size_Concat(0, Extract(159, 0, Ia_store_0)) ==
          0,
          1,
          0) ==
       0,
       1,
       0) !=
    0)"];
"0x2e1"[label="0x000002e1 PUSH1 0x00 \l0x000002e3 DUP1 \l0x000002e4 REVERT \l"];
"0x2e5"[label="0x000002e5 JUMPDEST \l0x000002e6 GAS \l0x000002e7 CALL \l0x000002e8 ISZERO \l0x000002e9 ISZERO \l0x000002ea PUSH2 0x02f2 \l0x000002ed JUMPI \l"];
"0x2e5" -> "0x2f2" [color="green" label=" True"];
"0x2e5" -> "0x2ee" [color="red" label=" Not(True)"];
"0x2ee"[label="0x000002ee PUSH1 0x00 \l0x000002f0 DUP1 \l0x000002f1 REVERT \l"];
"0x2f2"[label="0x000002f2 JUMPDEST \l0x000002f3 POP \l0x000002f4 POP \l0x000002f5 POP \l0x000002f6 PUSH1 0x40 \l0x000002f8 MLOAD \l0x000002f9 DUP1 \l0x000002fa MLOAD \l0x000002fb SWAP1 \l0x000002fc POP \l0x000002fd POP \l0x000002fe PUSH1 0x01 \l0x00000300 PUSH1 0x00 \l0x00000302 SWAP1 \l0x00000303 SLOAD \l0x00000304 SWAP1 \l0x00000305 PUSH2 0x0100 \l0x00000308 EXP \l0x00000309 SWAP1 \l0x0000030a DIV \l0x0000030b PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000320 AND \l0x00000321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000336 AND \l0x00000337 PUSH2 0x08fc \l0x0000033a ADDRESS \l0x0000033b PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000350 AND \l0x00000351 BALANCE \l0x00000352 SWAP1 \l0x00000353 DUP2 \l0x00000354 ISZERO \l0x00000355 MUL \l0x00000356 SWAP1 \l0x00000357 PUSH1 0x40 \l0x00000359 MLOAD \l0x0000035a PUSH1 0x00 \l0x0000035c PUSH1 0x40 \l0x0000035e MLOAD \l0x0000035f DUP1 \l0x00000360 DUP4 \l0x00000361 SUB \l0x00000362 DUP2 \l0x00000363 DUP6 \l0x00000364 DUP9 \l0x00000365 DUP9 \l0x00000366 CALL \l0x00000367 SWAP4 \l0x00000368 POP \l0x00000369 POP \l0x0000036a POP \l0x0000036b POP \l0x0000036c SWAP1 \l0x0000036d POP \l0x0000036e PUSH1 0x01 \l0x00000370 DUP1 \l0x00000371 PUSH1 0x14 \l0x00000373 PUSH2 0x0100 \l0x00000376 EXP \l0x00000377 DUP2 \l0x00000378 SLOAD \l0x00000379 DUP2 \l0x0000037a PUSH1 0xff \l0x0000037c MUL \l0x0000037d NOT \l0x0000037e AND \l0x0000037f SWAP1 \l0x00000380 DUP4 \l0x00000381 ISZERO \l0x00000382 ISZERO \l0x00000383 MUL \l0x00000384 OR \l0x00000385 SWAP1 \l0x00000386 SSTORE \l0x00000387 POP \l0x00000388 DUP1 \l0x00000389 SWAP2 \l0x0000038a POP \l0x0000038b POP \l0x0000038c SWAP1 \l0x0000038d JUMP \l"];
"0x2f2" -> "0x1a5" [color="black"];
"0x38e"[label="0x0000038e JUMPDEST \l0x0000038f PUSH1 0x00 \l0x00000391 DUP1 \l0x00000392 SWAP1 \l0x00000393 SLOAD \l0x00000394 SWAP1 \l0x00000395 PUSH2 0x0100 \l0x00000398 EXP \l0x00000399 SWAP1 \l0x0000039a DIV \l0x0000039b PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000003b0 AND \l0x000003b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x000003c6 AND \l0x000003c7 PUSH3 0x362a95 \l0x000003cb PUSH1 0x01 \l0x000003cd ADDRESS \l0x000003ce PUSH1 0x40 \l0x000003d0 MLOAD \l0x000003d1 DUP4 \l0x000003d2 PUSH4 0xffffffff \l0x000003d7 AND \l0x000003d8 PUSH29 0x0100000000000000000000000000000000000000000000000000000000 \l0x000003f6 MUL \l0x000003f7 DUP2 \l0x000003f8 MSTORE \l0x000003f9 PUSH1 0x04 \l0x000003fb ADD \l0x000003fc DUP1 \l0x000003fd DUP3 \l0x000003fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000413 AND \l0x00000414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000429 AND \l0x0000042a DUP2 \l0x0000042b MSTORE \l0x0000042c PUSH1 0x20 \l0x0000042e ADD \l0x0000042f SWAP2 \l0x00000430 POP \l0x00000431 POP \l0x00000432 PUSH1 0x00 \l0x00000434 PUSH1 0x40 \l0x00000436 MLOAD \l0x00000437 DUP1 \l0x00000438 DUP4 \l0x00000439 SUB \l0x0000043a DUP2 \l0x0000043b DUP6 \l0x0000043c DUP9 \l0x0000043d DUP1 \l0x0000043e EXTCODESIZE \l0x0000043f ISZERO \l0x00000440 ISZERO \l0x00000441 PUSH2 0x0449 \l0x00000444 JUMPI \l"];
"0x38e" -> "0x449" [color="green" label=" If(If(code_size_Concat(0, Extract(159, 0, Ia_store_0)) == 0,
      1,
      0) ==
   0,
   1,
   0) !=
0"];
"0x38e" -> "0x445" [color="red" label=" Not(If(If(code_size_Concat(0, Extract(159, 0, Ia_store_0)) ==
          0,
          1,
          0) ==
       0,
       1,
       0) !=
    0)"];
"0x445"[label="0x00000445 PUSH1 0x00 \l0x00000447 DUP1 \l0x00000448 REVERT \l"];
"0x449"[label="0x00000449 JUMPDEST \l0x0000044a GAS \l0x0000044b CALL \l0x0000044c ISZERO \l0x0000044d ISZERO \l0x0000044e PUSH2 0x0456 \l0x00000451 JUMPI \l"];
"0x449" -> "0x456" [color="green" label=" True"];
"0x449" -> "0x452" [color="red" label=" Not(True)"];
"0x452"[label="0x00000452 PUSH1 0x00 \l0x00000454 DUP1 \l0x00000455 REVERT \l"];
"0x456"[label="0x00000456 JUMPDEST \l0x00000457 POP \l0x00000458 POP \l0x00000459 POP \l0x0000045a POP \l0x0000045b PUSH1 0x00 \l0x0000045d DUP1 \l0x0000045e SWAP1 \l0x0000045f SLOAD \l0x00000460 SWAP1 \l0x00000461 PUSH2 0x0100 \l0x00000464 EXP \l0x00000465 SWAP1 \l0x00000466 DIV \l0x00000467 PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x0000047c AND \l0x0000047d PUSH20 0xffffffffffffffffffffffffffffffffffffffff \l0x00000492 AND \l0x00000493 PUSH4 0x2e1a7d4d \l0x00000498 PUSH1 0x01 \l0x0000049a PUSH1 0x40 \l0x0000049c MLOAD \l0x0000049d DUP3 \l0x0000049e PUSH4 0xffffffff \l0x000004a3 AND \l0x000004a4 PUSH29 0x0100000000000000000000000000000000000000000000000000000000 \l0x000004c2 MUL \l0x000004c3 DUP2 \l0x000004c4 MSTORE \l0x000004c5 PUSH1 0x04 \l0x000004c7 ADD \l0x000004c8 DUP1 \l0x000004c9 DUP3 \l0x000004ca DUP2 \l0x000004cb MSTORE \l0x000004cc PUSH1 0x20 \l0x000004ce ADD \l0x000004cf SWAP2 \l0x000004d0 POP \l0x000004d1 POP \l0x000004d2 PUSH1 0x20 \l0x000004d4 PUSH1 0x40 \l0x000004d6 MLOAD \l0x000004d7 DUP1 \l0x000004d8 DUP4 \l0x000004d9 SUB \l0x000004da DUP2 \l0x000004db PUSH1 0x00 \l0x000004dd DUP8 \l0x000004de DUP1 \l0x000004df EXTCODESIZE \l0x000004e0 ISZERO \l0x000004e1 ISZERO \l0x000004e2 PUSH2 0x04ea \l0x000004e5 JUMPI \l"];
"0x456" -> "0x4ea" [color="green" label=" If(If(code_size_Concat(0, Extract(159, 0, Ia_store_0)) == 0,
      1,
      0) ==
   0,
   1,
   0) !=
0"];
"0x456" -> "0x4e6" [color="red" label=" Not(If(If(code_size_Concat(0, Extract(159, 0, Ia_store_0)) ==
          0,
          1,
          0) ==
       0,
       1,
       0) !=
    0)"];
"0x4e6"[label="0x000004e6 PUSH1 0x00 \l0x000004e8 DUP1 \l0x000004e9 REVERT \l"];
"0x4ea"[label="0x000004ea JUMPDEST \l0x000004eb GAS \l0x000004ec CALL \l0x000004ed ISZERO \l0x000004ee ISZERO \l0x000004ef PUSH2 0x04f7 \l0x000004f2 JUMPI \l"];
"0x4ea" -> "0x4f7" [color="green" label=" True"];
"0x4ea" -> "0x4f3" [color="red" label=" Not(True)"];
"0x4f3"[label="0x000004f3 PUSH1 0x00 \l0x000004f5 DUP1 \l0x000004f6 REVERT \l"];
"0x4f7"[label="0x000004f7 JUMPDEST \l0x000004f8 POP \l0x000004f9 POP \l0x000004fa POP \l0x000004fb PUSH1 0x40 \l0x000004fd MLOAD \l0x000004fe DUP1 \l0x000004ff MLOAD \l0x00000500 SWAP1 \l0x00000501 POP \l0x00000502 POP \l0x00000503 JUMP \l"];
"0x4f7" -> "0x1c7" [color="black"];
"0x504"[label="0x00000504 JUMPDEST \l0x00000505 PUSH1 0x01 \l0x00000507 PUSH1 0x14 \l0x00000509 SWAP1 \l0x0000050a SLOAD \l0x0000050b SWAP1 \l0x0000050c PUSH2 0x0100 \l0x0000050f EXP \l0x00000510 SWAP1 \l0x00000511 DIV \l0x00000512 PUSH1 0xff \l0x00000514 AND \l0x00000515 DUP2 \l0x00000516 JUMP \l"];
"0x504" -> "0x1dc" [color="black"];
"0x517"[label="0x00000517 STOP \l"];
}
